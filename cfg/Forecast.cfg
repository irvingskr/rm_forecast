PACKAGE = "rm_forecast"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# select_bar = gen.enum([gen.const("Pass", int_t, 0, "Pass"),
#                        gen.const("Select", int_t, 1, "Select")], "type")
gen.add("max_match_distance", double_t, 0, "", 0.2, 0, 2)
gen.add("tracking_threshold", int_t, 0, "", 5, 0, 15)
gen.add("lost_threshold", int_t, 0, "", 5, 0, 15)

gen.add("max_jump_angle", double_t, 0, "", 0.02, 0, 2)
gen.add("max_jump_period", double_t, 0, "", 0.8, 0, 2)
gen.add("allow_following_range", double_t, 0, "", 0.5, 0, 2)

gen.add("forecast_readied", bool_t, 0, "", True)
gen.add("reset", bool_t, 0, "", False)
gen.add("min_target_quantity", int_t, 0, "", 3, 0, 1500)
gen.add("const_distance", double_t, 0, "", 7.3, 0, 10)
gen.add("outpost_radius", double_t, 0, "", 0.35, 0, 2)
gen.add("rotate_speed", double_t, 0, "", 0.5, 0, 2)
gen.add("y_thred", double_t, 0, "", 0.1, 0, 2)
gen.add("time_thred", double_t, 0, "", 0.01, 0, 2)
gen.add("time_offset", double_t, 0, "", 0.98, 0, 2)
gen.add("ramp_time_offset",double_t,0,"", 0.98, 0,2)
gen.add("ramp_threshold",double_t,0,"", 0.05, 0,1.57)
gen.add("next_thred",double_t,0,"", 0.3, 0,1.57)


gen.add("ring_highland_distance_offset",double_t,0,"",0,-10,10)
gen.add("source_island_distance_offset",double_t,0,"",0,-10,10)

# gen.add("is_filter_readied", bool_t, 0, "", False)
# gen.add("min_lw_ratio", double_t, 0, "", 2.4, 0, 4)

exit(gen.generate(PACKAGE, "rm_forecast", "Forecast"))
